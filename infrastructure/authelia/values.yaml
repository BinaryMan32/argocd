# https://github.com/authelia/chartrepo/tree/master/charts/authelia
authelia:
  pod:
    kind: Deployment
    env:
      - name: AUTHELIA_STORAGE_POSTGRES_PASSWORD_FILE
        value: /secrets/authelia-db-app/password
      - name: AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD_FILE
        value: /secrets/lldap-authelia/user_pass
      - name: AUTHELIA_NOTIFIER_SMTP_PASSWORD_FILE
        value: /secrets/authelia-smtp/password
  configMap:
    log:
      level: debug
    default_2fa_method: webauthn
    # https://www.authelia.com/configuration/second-factor/webauthn/
    webauthn:
      enabled: true
      enable_passkey_login: true
      display_name: Authelia
    storage:
      postgres:
        enabled: true
        address: 'tcp://authelia-db-rw:5432'
        # Disable automatic postgres password management
        # Use cnpg secret via additionalSecrets
        password:
          disabled: true
    authentication_backend:
      # https://www.authelia.com/integration/ldap/lldap/
      # https://github.com/lldap/lldap/blob/main/example_configs/authelia_config.yml
      ldap:
        enabled: true
        implementation: lldap
        address: ldap://lldap.auth.svc.cluster.local
        base_dn: dc=int,dc=fivebytestudios,dc=com
        additional_users_dn: 'ou=people'
        users_filter: '(&(|({username_attribute}={input})({mail_attribute}={input}))(objectClass=person))'
        additional_groups_dn: 'ou=groups'
        groups_filter: '(&(member={dn})(objectClass=groupOfNames))'
        user: 'uid=authelia,ou=people,dc=int,dc=fivebytestudios,dc=com'
        password:
          disabled: true
    notifier:
      smtp:
        enabled: true
        # https://www.authelia.com/configuration/notifications/smtp/#address
        address: 'submissions://smtp.mailgun.org:465'
        sender: 'Authelia <authelia@mail.fivebytestudios.com>'

        ## HELO/EHLO Identifier. Some SMTP Servers may reject the default of localhost.
        identifier: 'int.fivebytestudios.com'

        ## Subject configuration of the emails sent.
        ## {title} is replaced by the text from the notifier
        subject: '[Authelia] {title}'
        username: authelia@mail.fivebytestudios.com
        password:
          disabled: true
    access_control:
      rules:
        - domain: longhorn.int.fivebytestudios.com
          subject: group:longhorn
          policy: two_factor
    identity_providers:
      oidc:
        enabled: true
        # https://www.authelia.com/configuration/identity-providers/openid-connect/provider/#jwks
        jwks:
          - key:
              path: /secrets/authelia-jwk-rsa/rsa.2048.key
        claims_policies:
          # Include claims in the ID token
          # https://www.authelia.com/integration/openid-connect/openid-connect-1.0-claims/#restore-functionality-prior-to-claims-parameter
          kubectl-oidc-login:
            id_token: ['groups', 'email']
        # https://www.authelia.com/configuration/identity-providers/openid-connect/clients/
        clients:
          - client_name: headlamp
            client_id: '{{ secret "/secrets/authelia-oidc-headlamp/client-id" }}'
            client_secret:
              path: /secrets/authelia-oidc-headlamp/client-secret-digest
            redirect_uris:
              - https://headlamp.int.fivebytestudios.com/oidc-callback
            scopes: ["openid", "profile", "email", "groups"]
            require_pkce: false
            authorization_policy: two_factor
          - client_name: kubectl
            client_id: kubectl
            # Kubectl can use a public client with PKCE, but headlamp doesn't support public clients
            # Use a dummy secret but require PKCE
            # Can change to a public client if https://github.com/kubernetes-sigs/headlamp/issues/3137 is resolved
            client_secret:
              # docker run --rm authelia/authelia:latest authelia crypto hash generate pbkdf2 --variant sha512 --password no-secret
              value: $pbkdf2-sha512$310000$UVJNLv8PPl7Seikde1vi2Q$X0cFinJv1k3Vmq5KJ4uyJeQBYOI93Uq9mFsbAvTPHhvLL0w1ZHINpxs5DlPNMIYZ885UoZQtDI4VPxe8v5wzkQ
            claims_policy: kubectl-oidc-login
            # Used by kubectl oidc-login plugin to receive tokens
            redirect_uris:
              - http://localhost:8000
              - http://localhost:18000
            scopes: [ 'openid', 'groups', 'email', 'profile', 'offline_access' ]
            require_pkce: true
            authorization_policy: two_factor
  secret:
    # Authelia helm chart automatically generates random secrets, but that updates the secrets on re-deploy.
    # Refreshing the storage secret in particular makes it impossible to decrypt the database.
    # Instead, generate random secrets using create-sealed-secret-authelia.sh
    existingSecret: authelia
    additionalSecrets:
      authelia-db-app:
        items:
          - key: password
      authelia-smtp:
        items:
          - key: password
      lldap-authelia:
        items:
          - key: user_pass
      authelia-oidc-headlamp:
        items:
          - key: client-id
          - key: client-secret-digest
      authelia-jwk-rsa:
        items:
          - key: rsa.2048.key
  