apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ingress-nginx-intranet
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.project.name }}
  source:
    repoURL: https://kubernetes.github.io/ingress-nginx
    chart: ingress-nginx
    targetRevision: 4.12.0
    helm:
      # https://github.com/kubernetes/ingress-nginx/blob/main/charts/ingress-nginx/values.yaml
      values: |
        controller:
          ingressClassResource:
            default: true
          service:
            loadBalancerIP: {{ .Values.ipAddress.ingressIntranet }}
          # minio ingress needs snippet annotations
          allowSnippetAnnotations: true
          replicaCount: 2
          # try to keep replicas in different node availability zones
          topologySpreadConstraints:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: '{{"{{"}} include "ingress-nginx.name" . {{"}}"}}'
                  app.kubernetes.io/instance: '{{"{{"}} .Release.Name {{"}}"}}'
                  app.kubernetes.io/component: controller
              topologyKey: topology.kubernetes.io/zone
              maxSkew: 1
              whenUnsatisfiable: ScheduleAnyway
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: '{{"{{"}} include "ingress-nginx.name" . {{"}}"}}'
                  app.kubernetes.io/instance: '{{"{{"}} .Release.Name {{"}}"}}'
                  app.kubernetes.io/component: controller
              topologyKey: kubernetes.io/hostname
              maxSkew: 1
              whenUnsatisfiable: DoNotSchedule
  destination:
    namespace: ingress-nginx-intranet
    server: {{ .Values.destination.server }}
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
