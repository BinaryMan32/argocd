apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: coredns
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.project.name }}
  source:
    repoURL: https://coredns.github.io/helm
    chart: coredns
    targetRevision: 1.43.0
    helm:
      valuesObject:
        service:
          # K3S seems to look for this address
          clusterIP: 10.43.0.10
        # From https://github.com/coredns/helm/blob/master/charts/coredns/values.yaml
        # Modified to forward to k8s-gateway
        servers:
          - zones:
            - zone: .
              scheme: dns://
              use_tcp: true
            port: 53
            # -- expose the service on a different port
            # servicePort: 5353
            # If serviceType is nodePort you can specify nodePort here
            # nodePort: 30053
            # hostPort: 53
            plugins:
            - name: errors
            # Serves a /health endpoint on :8080, required for livenessProbe
            - name: health
              configBlock: |-
                lameduck 10s
            # Serves a /ready endpoint on :8181, required for readinessProbe
            - name: ready
            # Required to query kubernetes API for data
            - name: kubernetes
              parameters: cluster.local in-addr.arpa ip6.arpa
              configBlock: |-
                pods insecure
                fallthrough in-addr.arpa ip6.arpa
                ttl 30
            # Serves a /metrics endpoint on :9153, required for serviceMonitor
            - name: prometheus
              parameters: 0.0.0.0:9153
            - name: forward
              parameters: {{ .Values.domain.intranet }} {{ .Values.ipAddress.k8sGateway }}
            - name: forward
              parameters: . /etc/resolv.conf
            - name: cache
              parameters: 30
            - name: loop
            - name: reload
            - name: loadbalance
  destination:
    namespace: kube-system
    server: {{ .Values.destination.server }}
  syncPolicy:
    automated: {}
